rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    match /spaces/{spaceId} {
      // Allow a user to read a space if they are a member.
      // This rule applies to both single document gets and collection queries (lists).
      allow read: if request.auth.uid in resource.data.memberIds;

      // Any authenticated user can create a space.
      allow create: if request.auth.uid != null;
      
      // Any member of a space can update it.
      allow update: if request.auth.uid in resource.data.memberIds;
      
      // Only the owner (the first member in the array) can delete a space.
      allow delete: if request.auth.uid == resource.data.memberIds[0];

      // Rules for all subcollections within a space (e.g., posts, ideas).
      match /{path=**}/documents/{docId} {
        allow read, write: if request.auth.uid in get(/databases/$(database)/documents/spaces/$(spaceId)).data.memberIds;
      }
    }

    match /invites/{inviteId} {
      // Allow read/write access to an invite document if the user is the sender or the intended recipient.
      allow read, write: if request.auth.uid == resource.data.fromUser.id || request.auth.uid == get(/databases/$(database)/documents/users/{userId}).data().uid;
      allow create: if request.auth.uid != null;
    }

    match /notifications/{notificationId} {
      // A user can read/write their own notifications.
      allow read, write, delete: if request.auth.uid == resource.data.userId;
    }
  }
}
