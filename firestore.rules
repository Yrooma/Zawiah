
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can create their own profile, and only read/update their own.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId;
    }

    // Spaces can be created by any authenticated user.
    // Read/write is restricted to members of the space.
    // Deletion is restricted to the owner (the first member of the team).
    match /spaces/{spaceId} {
      allow create: if request.auth.uid != null;
      
      // Allow a user to join a space if they are adding themselves to the memberIds
      allow update: if request.auth.uid in resource.data.memberIds || 
                      (request.resource.data.memberIds == resource.data.memberIds.concat([request.auth.uid]));

      allow read: if request.auth.uid in resource.data.memberIds;
      allow delete: if request.auth.uid == resource.data.team[0].id;

      // Posts and Ideas subcollections
      match /{subcollection}/{document=**} {
        allow read, write: if request.auth.uid in get(/databases/$(database)/documents/spaces/$(spaceId)).data.memberIds;
      }
    }
    
    // Notifications can be created by anyone authenticated (for batch writes).
    // Users can only read or update their own notifications.
    match /notifications/{notificationId} {
        allow create: if request.auth.uid != null;
        allow read, update: if request.auth.uid == resource.data.userId;
    }
  }
}

    