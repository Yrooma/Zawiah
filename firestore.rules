
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    match /spaces/{spaceId} {
      allow read: if request.auth.uid in resource.data.memberIds;
      allow create: if request.auth.uid != null;
      allow update: if request.auth.uid in resource.data.memberIds;
      allow delete: if request.auth.uid == resource.data.memberIds[0];

      match /{path=**}/documents/{docId} {
        allow read, write: if request.auth.uid in get(/databases/$(database)/documents/spaces/$(spaceId)).data.memberIds;
      }
    }
    
    match /invites/{inviteId} {
      allow read: if request.auth.email == resource.data.toEmail;
      allow create: if get(/databases/$(database)/documents/spaces/$(request.resource.data.spaceId)).data.memberIds[0] == request.auth.uid;
      allow update, delete: if request.auth.email == resource.data.toEmail;
    }

    match /notifications/{notificationId} {
      allow read, write, delete: if request.auth.uid == resource.data.userId;
    }
  }
}
