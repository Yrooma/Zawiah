
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    match /spaces/{spaceId} {
      // This is the correct rule. A user can read a space document if their UID is in the memberIds list.
      // This single rule works for both fetching one document and for querying a list of documents.
      allow read: if request.auth.uid in resource.data.memberIds;
      
      // A user can create a space.
      allow create: if request.auth.uid != null;
      
      // A member can update a space.
      allow update: if request.auth.uid in resource.data.memberIds;
      
      // Only the owner (the first member in the team array) can delete a space.
      allow delete: if request.auth.uid == resource.data.team[0].id;

      // Subcollections can be accessed by members of the parent space.
      match /{path=**}/documents/{docId} {
        allow read, write: if request.auth.uid in get(/databases/$(database)/documents/spaces/$(spaceId)).data.memberIds;
      }
    }

    match /invites/{inviteId} {
      // An invited user can read their own invite. The space owner can read invites for their space.
      allow read: if request.auth.uid != null && (request.auth.token.email == resource.data.toEmail || request.auth.uid == resource.data.fromUser.id);
      
      // The space owner can create an invite.
      allow create: if request.auth.uid != null && request.auth.uid == request.resource.data.fromUser.id;
      
      // The invited user can update the status (accept/decline).
      allow update: if request.auth.uid != null && request.auth.token.email == resource.data.toEmail;
      
      // The inviter can delete/cancel the invite.
      allow delete: if request.auth.uid != null && request.auth.uid == resource.data.fromUser.id;
    }

    match /notifications/{notificationId} {
      // Users can manage their own notifications.
      allow read, write, create, delete: if request.auth.uid == resource.data.userId;
    }
  }
}
