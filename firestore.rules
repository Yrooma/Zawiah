
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can read their own profile and create one, but not others'.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }

    // Spaces can be read/written by members.
    match /spaces/{spaceId} {
      function isMember() {
        return request.auth.uid in resource.data.memberIds;
      }

      function isOwner() {
        return request.auth.uid == resource.data.team[0].id;
      }
      
      function isJoining() {
        // Allow if the user is adding themselves to the memberIds list.
        return request.auth.uid in request.resource.data.memberIds &&
               !(request.auth.uid in resource.data.memberIds);
      }

      allow read: if isMember();
      // Allow update if the user is already a member OR if they are joining for the first time.
      allow update: if isMember() || isJoining();
      allow delete: if isOwner();
      allow create: if request.auth.uid != null;

      // Posts can be read/written by members of the space.
      match /posts/{postId} {
        allow read, write: if isMember();
      }

      // Ideas can be read/written by members of the space.
      match /ideas/{ideaId} {
        allow read, write: if isMember();
      }
    }
    
    // Users can read/write their own notifications.
    match /notifications/{notificationId} {
        allow read, write: if request.auth.uid == request.resource.data.userId;
    }
  }
}
